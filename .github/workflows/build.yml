name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  # Customize the build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        tags: jasminegraph
        outputs: type=docker,dest=/tmp/jasminegraph.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: jasminegraph
        path: /tmp/jasminegraph.tar

  unit-tests:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

    - uses: jupyterhub/action-k3s-helm@v3
      with:
        docker-enabled: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: jasminegraph
        path: /tmp

    - name: Load image
      run: docker load -i /tmp/jasminegraph.tar

    - name: Build unit test
      run: docker build -f ./tests/unit/Dockerfile -t jasminegraph:unit .

    - name: Run unit test
      run: |
        mkdir coverage
        kubectl apply -f ./.github/workflows/resources/test-rbac.yaml
        kubectl apply -f ./.github/workflows/resources/unit-test-conf.yaml
        sleep 30
        kubectl logs -f jasminegraph-unit-test-pod

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: ./coverage/coverage.xml
        fail_ci_if_error: true

  docker-integration-tests:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.head_ref}}
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: jasminegraph
          path: /tmp

      - name: Load image
        run: docker load -i /tmp/jasminegraph.tar

      - name: Run Integration Tests
        run: |
          chmod +x test-docker.sh
          ./test-docker.sh
      
  k8s-integration-tests:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

    - uses: jupyterhub/action-k3s-helm@v3
      with:
          docker-enabled: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
          name: jasminegraph
          path: /tmp

    - name: Load image
      run: docker load -i /tmp/jasminegraph.tar

    - name: Grant default user permissions
      run: kubectl apply -f ./.github/workflows/resources/test-rbac.yaml

    - name: K8S integration tests
      run: |
          chmod +x test-k8s.sh
          ./test-k8s.sh
